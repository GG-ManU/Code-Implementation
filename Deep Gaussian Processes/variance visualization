import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming you have the prediction variances from your model
def plot_variance_density(m, X_test):
    # Predict the variance for the test set
    _, v = m.predict_y(X_test)
    
    n_classes = v.shape[1]
    
    # Set up the subplots grid (2 rows, 5 columns for 10 classes)
    fig, axes = plt.subplots(2, 5, figsize=(15, 10))
    axes = axes.flatten()

    # Loop over each class and plot the density of the variances
    for i in range(n_classes):
        sns.kdeplot(v[:, i], ax=axes[i], shade=True, color='blue')
        axes[i].set_title(f'Class {i} Variance')
        axes[i].set_xlabel('Variance')
        axes[i].set_ylabel('Density')

    plt.tight_layout()
    plt.show()

# Assuming you have already run your model and you have the test data `Xs`
plot_variance_density(m_dgp2, Xs)
